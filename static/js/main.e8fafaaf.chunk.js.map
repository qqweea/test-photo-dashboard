{"version":3,"sources":["components/DesktopPagination/styles.js","services/api/api.service.js","context/photos/photos.actions.js","context/photos/photos.reducer.js","utils/constants/index.js","hooks/useIsDesktop.js","utils/messages/index.js","context/photos/photos.state.js","components/DesktopPagination/DesktopPagination.js","components/ImageCard/ImageCard.js","components/ImageCard/styles.js","components/ImageCard/ImageCardSkeleton.js","components/ImageList/ImageList.js","components/common/Input/styles.js","components/common/Input/InputFactory.js","components/common/Input/InputSelect.js","components/common/Input/InputText.js","components/common/Input/InputSearch.js","components/OperationsBar/styles.js","components/OperationsBar/OperationsBar.js","layout/AppLayout/styles.js","components/common/Icons/FilterIcon.js","components/FilterButton/styles.js","components/FilterButton/FilterButton.js","layout/AppLayout/AppLayout.js","pages/HomePage/HomePage.js","App.js","index.js"],"names":["PaginationWrapper","styled","div","Api","fetchAlbums","a","axios","get","data","Promise","resolve","albums","reject","fetchPosts","queryState","currentPage","itemsPerPage","search","albumId","params","q","undefined","_start","_limit","headers","photos","totalItems","instance","this","create","baseURL","process","FETCH_ALBUMS_REQUEST","FETCH_ALBUMS_FULFILLED","FETCH_ALBUMS_REJECTED","FETCH_PHOTOS_REQUEST","FETCH_PHOTOS_FULFILLED","FETCH_PHOTOS_REJECTED","SET_ITEMS_PER_PAGE","SET_SEARCH","SET_ALBUM","INCREMENT_PAGE","SET_PAGE","SET_DESKTOP_VIEW","actionTypes","actions","payload","type","reducer","state","action","isLoading","items","map","item","value","id","optionLabel","title","error","isDesktop","Number","query","nextState","ITEMS_PER_PAGE_OPTIONS","useIsDesktop","useState","window","innerWidth","setIsDesktop","useEffect","handleResize","addEventListener","removeEventListener","messages","drawerTitle","labels","folder","placeholders","misc","allAlbums","viewFullSize","PhotosContext","createContext","displayName","injectPhotosPartialState","mapStateToProps","WrappedComponent","props","useContext","selectedState","DesktopPagination","onPageChange","current","total","pageSize","onChange","showSizeChanger","disabled","defaultProps","photosActions","setCurrentPage","ImageCard","url","thumbnailUrl","bordered","hoverable","cover","width","src","preview","mask","Meta","SkeletonCard","Card","ImageCardSkeleton","Image","active","paragraph","ImageList","gutter","xs","sm","md","lg","Array","fill","val","i","incrementCurrentPage","Label","label","LabelText","span","InputFactory","rest","InputSelect","CommonSelect","options","size","option","Option","InputText","InputSearch","Search","OperationsBarContainer","onAlbumChange","setCurrentAlbum","onItemsPerPageChange","setItemsPerPage","onSetSearch","setSearch","justify","placeholder","onSearch","allowClear","showSearch","StyledTitle","Typography","Title","StyledHeader","Layout","Header","StyledContent","Content","FilterIcon","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","d","height","color","StyledButton","button","attrs","FilterButton","onClick","e","preventDefault","AppLayout","children","operationsBar","isDrawerOpen","setIsDrawerOpen","align","placement","onClose","visible","HomePage","queryClient","QueryClient","withPhotosContext","QueryClientProvider","client","initialState","useReducer","dispatch","page","album","api","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8fafaaf.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const PaginationWrapper = styled.div`\n  margin-top: 2rem;\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n`;\n","import { create } from 'axios';\n\nclass Api {\n  constructor() {\n    if (Api.instance) {\n      return Api.instance;\n    }\n\n    this.axios = create({ baseURL: process.env.REACT_APP_API_URL });\n    Api.instance = this;\n\n    return this;\n  }\n\n  fetchAlbums = async () => {\n    try {\n      const { data } = await this.axios.get('/albums');\n      return Promise.resolve({ albums: data });\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n\n  fetchPosts = async (queryState) => {\n    const { currentPage, itemsPerPage, search, albumId } = queryState;\n    try {\n      const { data, headers } = await this.axios.get('/photos', {\n        params: {\n          q: search || undefined,\n          albumId: albumId || undefined,\n          _start: (currentPage - 1) * itemsPerPage,\n          _limit: itemsPerPage,\n        },\n      });\n\n      return Promise.resolve({ photos: data, totalItems: headers['x-total-count'] });\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n}\n\nexport default Api;\n","const FETCH_ALBUMS_REQUEST = 'photos/FETCH_ALBUMS_REQUEST';\nconst FETCH_ALBUMS_FULFILLED = 'photos/FETCH_ALBUMS_FULFILLED';\nconst FETCH_ALBUMS_REJECTED = 'photos/FETCH_ALBUMS_REJECTED';\n\nconst fetchAlbumsRequest = (payload) => ({ type: FETCH_ALBUMS_REQUEST, payload });\nconst fetchAlbumsFulfilled = (payload) => ({ type: FETCH_ALBUMS_FULFILLED, payload });\nconst fetchAlbumsRejected = (payload) => ({ type: FETCH_ALBUMS_REJECTED, payload });\n\nconst FETCH_PHOTOS_REQUEST = 'photos/FETCH_PHOTOS_REQUEST';\nconst FETCH_PHOTOS_FULFILLED = 'photos/FETCH_PHOTOS_FULFILLED';\nconst FETCH_PHOTOS_REJECTED = 'photos/FETCH_PHOTOS_REJECTED';\n\nconst fetchPhotosRequest = (payload) => ({ type: FETCH_PHOTOS_REQUEST, payload });\nconst fetchPhotosFulfilled = (payload) => ({ type: FETCH_PHOTOS_FULFILLED, payload });\nconst fetchPhotosRejected = (payload) => ({ type: FETCH_PHOTOS_REJECTED, payload });\n\nconst SET_ITEMS_PER_PAGE = 'photos/SET_ITEMS_PER_PAGE';\nconst setItemsPerPage = (payload) => ({ type: SET_ITEMS_PER_PAGE, payload });\n\nconst SET_SEARCH = 'photos/SET_SEARCH';\nconst setSearch = (payload) => ({ type: SET_SEARCH, payload });\n\nconst SET_ALBUM = 'photos/SET_ALBUM';\nconst setAlbum = (payload) => ({ type: SET_ALBUM, payload });\n\nconst INCREMENT_PAGE = 'photos/INCREMENT_PAGE';\nconst DECREMENT_PAGE = 'photos/DECREMENT_PAGE';\nconst SET_PAGE = 'photos/SET_PAGE';\n\nconst incrementPage = (payload) => ({ type: INCREMENT_PAGE, payload });\nconst decrementPage = (payload) => ({ type: DECREMENT_PAGE, payload });\nconst setPage = (payload) => ({ type: SET_PAGE, payload });\n\nconst SET_DESKTOP_VIEW = 'photos/SET_DESKTOP_VIEW'\n\nconst setDesktopView = (payload) => ({ type: SET_DESKTOP_VIEW, payload });\n\nexport const actionTypes = {\n  FETCH_ALBUMS_REQUEST,\n  FETCH_ALBUMS_FULFILLED,\n  FETCH_ALBUMS_REJECTED,\n  FETCH_PHOTOS_REQUEST,\n  FETCH_PHOTOS_FULFILLED,\n  FETCH_PHOTOS_REJECTED,\n  SET_ITEMS_PER_PAGE,\n  INCREMENT_PAGE,\n  DECREMENT_PAGE,\n  SET_SEARCH,\n  SET_ALBUM,\n  SET_PAGE,\n  SET_DESKTOP_VIEW,\n};\n\nexport const actions = {\n  fetchAlbumsRequest,\n  fetchAlbumsFulfilled,\n  fetchAlbumsRejected,\n  fetchPhotosRequest,\n  fetchPhotosFulfilled,\n  fetchPhotosRejected,\n  setItemsPerPage,\n  incrementPage,\n  decrementPage,\n  setSearch,\n  setAlbum,\n  setPage,\n  setDesktopView,\n};\n","import { actionTypes } from './photos.actions';\n\nconst reducer = (state, action) => {\n  if (action.type === actionTypes.FETCH_ALBUMS_REQUEST) {\n    return {\n      ...state,\n      albums: {\n        ...state.albums,\n        isLoading: true,\n      },\n    };\n  }\n  if (action.type === actionTypes.FETCH_ALBUMS_FULFILLED) {\n    const items = action.payload.albums.map((item) => ({\n      value: item.id,\n      optionLabel: item.title,\n    }));\n    return {\n      ...state,\n      albums: {\n        ...state.albums,\n        isLoading: false,\n        error: null,\n        items: [...state.albums.items, ...items],\n      },\n    };\n  }\n  if (action.type === actionTypes.FETCH_ALBUMS_REJECTED) {\n    return {\n      ...state,\n      albums: {\n        ...state.albums,\n        isLoading: false,\n        error: action.payload.error,\n      },\n    };\n  }\n  if (action.type === actionTypes.FETCH_PHOTOS_REQUEST) {\n    return {\n      ...state,\n      photos: {\n        ...state.photos,\n        isLoading: true,\n        items: state.isDesktop ? [] : [...state.photos.items],\n      },\n    };\n  }\n  if (action.type === actionTypes.FETCH_PHOTOS_FULFILLED) {\n    return {\n      ...state,\n      photos: {\n        ...state.photos,\n        isLoading: false,\n        items: [...state.photos.items, ...action.payload.photos],\n        totalItems: Number(action.payload.totalItems),\n      },\n    };\n  }\n  if (action.type === actionTypes.FETCH_PHOTOS_REJECTED) {\n    return {\n      ...state,\n      photos: {\n        ...state.photos,\n        isLoading: false,\n      },\n    };\n  }\n  if (action.type === actionTypes.SET_ITEMS_PER_PAGE) {\n    return {\n      ...state,\n      photos: {\n        ...state.photos,\n        items: [],\n      },\n      query: {\n        ...state.query,\n        itemsPerPage: action.payload,\n        currentPage: 1,\n      },\n    };\n  }\n  if (action.type === actionTypes.SET_SEARCH) {\n    return {\n      ...state,\n      photos: {\n        ...state.photos,\n        items: [],\n      },\n      query: {\n        ...state.query,\n        search: action.payload,\n        currentPage: 1,\n      },\n    };\n  }\n  if (action.type === actionTypes.SET_ALBUM) {\n    return {\n      ...state,\n      photos: {\n        ...state.photos,\n        items: [],\n      },\n      query: {\n        ...state.query,\n        albumId: action.payload,\n        currentPage: 1,\n      },\n    };\n  }\n  if (action.type === actionTypes.SET_PAGE) {\n    return {\n      ...state,\n      query: {\n        ...state.query,\n        currentPage: action.payload,\n      },\n    };\n  }\n  if (action.type === actionTypes.INCREMENT_PAGE) {\n    return {\n      ...state,\n      query: {\n        ...state.query,\n        currentPage: state.query.currentPage + 1,\n      },\n    };\n  }\n  if (action.type === actionTypes.SET_DESKTOP_VIEW && state.isDesktop !== action.payload) {\n    let nextState = {\n      ...state,\n      isDesktop: action.payload,\n    };\n    if (state.query.currentPage !== 1) {\n      nextState = {\n        ...state,\n        query: {\n          ...state.query,\n          currentPage: 1,\n        },\n      };\n    }\n    return nextState;\n  }\n  return state;\n};\n\nexport default reducer;\n","export const TABLET_BREAKPOINT = 768;\n\nexport const ITEMS_PER_PAGE_OPTIONS = [\n  { value: 20, optionLabel: 20 },\n  { value: 50, optionLabel: 50 },\n  { value: 100, optionLabel: 100 },\n];\n","import { useEffect, useState } from 'react';\nimport { TABLET_BREAKPOINT } from 'utils/constants';\n\nexport default function useIsDesktop() {\n  const [isDesktop, setIsDesktop] = useState(\n    window.innerWidth >= TABLET_BREAKPOINT\n  );\n  useEffect(() => {\n    function handleResize() {\n      setIsDesktop(window.innerWidth >= TABLET_BREAKPOINT);\n    }\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return isDesktop;\n}\n","const headers = {\n  title: '{JSON} Photos',\n  drawerTitle: 'Search tools',\n};\n\nconst labels = {\n  search: 'Search images by title',\n  folder: 'Filter images by album',\n  itemsPerPage: 'Items per page',\n};\n\nconst placeholders = {\n  search: 'Search for a title',\n  folder: 'Search for a album',\n};\n\nconst misc = {\n  allAlbums: 'All albums',\n  viewFullSize: 'View full size',\n};\n\nconst messages = {\n  headers,\n  labels,\n  placeholders,\n  misc,\n};\n\nexport default messages;\n","import React, { useReducer, useEffect, createContext, useContext } from 'react';\nimport Api from 'services/api/api.service';\nimport reducer from './photos.reducer';\nimport { actions } from './photos.actions';\nimport useIsDesktop from 'hooks/useIsDesktop';\nimport messages from 'utils/messages';\n\nconst PhotosContext = createContext();\n\nPhotosContext.displayName = 'photos.state';\n\nexport const withPhotosContext = (WrappedComponent) => (props) => {\n  const isDesktop = useIsDesktop();\n\n  const initialState = {\n    photos: {\n      isLoading: false,\n      error: null,\n      items: [],\n      totalItems: 0,\n    },\n    albums: {\n      isLoading: false,\n      error: null,\n      items: [{ value: 0, optionLabel: messages.misc.allAlbums }],\n    },\n    query: {\n      currentPage: 1,\n      itemsPerPage: 20,\n      search: '',\n      albumId: 0,\n    },\n    isDesktop,\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const setCurrentPage = (page) => {\n    dispatch(actions.setPage(page));\n  };\n\n  const incrementCurrentPage = () => {\n    dispatch(actions.incrementPage())\n  }\n\n  const setCurrentAlbum = (album) => {\n    dispatch(actions.setAlbum(album))\n  }\n\n  const setItemsPerPage = (itemsPerPage) => {\n    dispatch(actions.setItemsPerPage(itemsPerPage));\n  }\n\n  const setSearch = (search) => {\n    dispatch(actions.setSearch(search));\n  }\n\n  const photosActions = {\n    setCurrentPage,\n    setCurrentAlbum,\n    setItemsPerPage,\n    setSearch,\n    incrementCurrentPage,\n  };\n\n  useEffect(() => {\n    const api = new Api();\n\n    const fetchAlbums = async () => {\n      dispatch(actions.fetchAlbumsRequest());\n      try {\n        const data = await api.fetchAlbums();\n        dispatch(actions.fetchAlbumsFulfilled(data));\n      } catch (err) {\n        dispatch(actions.fetchAlbumsRejected(err));\n      }\n    };\n    fetchAlbums();\n  }, []);\n\n  useEffect(() => {\n    const api = new Api();\n\n    const fetchPosts = async () => {\n      dispatch(actions.fetchPhotosRequest());\n      try {\n        const data = await api.fetchPosts(state.query);\n        dispatch(actions.fetchPhotosFulfilled(data));\n      } catch (err) {\n        dispatch(actions.fetchPhotosRejected(err));\n      }\n    };\n    fetchPosts();\n  }, [state.query]);\n\n  useEffect(() => {\n    dispatch(actions.setDesktopView(isDesktop));\n  }, [isDesktop]);\n\n  return (\n    <PhotosContext.Provider value={{ ...state, photosActions }}>\n      <WrappedComponent {...props} />\n    </PhotosContext.Provider>\n  );\n};\n\nexport const injectPhotosState = (WrappedComponent) => (props) => {\n  const state = useContext(PhotosContext);\n  return <WrappedComponent {...props} {...state} />;\n};\n\nexport const injectPhotosPartialState = (mapStateToProps) => (WrappedComponent) => (props) => {\n  const state = useContext(PhotosContext);\n\n  const selectedState = mapStateToProps(state);\n\n  return <WrappedComponent {...props} {...selectedState} />;\n};\n\nexport default PhotosContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination } from 'antd';\nimport { PaginationWrapper } from './styles';\nimport { injectPhotosPartialState } from 'context/photos';\n\nconst DesktopPagination = (props) => {\n  const { currentPage, totalItems, itemsPerPage, onPageChange, isLoading } = props;\n\n  return (\n    <PaginationWrapper>\n      <Pagination\n        current={currentPage}\n        total={totalItems}\n        pageSize={itemsPerPage}\n        onChange={onPageChange}\n        showSizeChanger={false}\n        disabled={isLoading}\n        // showLessItems\n      />\n    </PaginationWrapper>\n  );\n};\n\nDesktopPagination.propTypes = {\n  currentPage: PropTypes.number,\n  totalItems: PropTypes.number,\n  itemsPerPage: PropTypes.number,\n  onPageChange: PropTypes.func,\n  isLoading: PropTypes.bool,\n};\n\nDesktopPagination.defaultProps = {\n  currentPage: 4,\n  totalItems: 1000,\n  itemsPerPage: 20,\n  onPageChange: () => {},\n  isLoading: false,\n};\n\nconst mapStateToProps = (state) => ({\n  currentPage: state.query.currentPage,\n  itemsPerPage: state.query.itemsPerPage,\n  onPageChange: state.photosActions.setCurrentPage,\n  totalItems: state.photos.totalItems,\n  isLoading: state.photos.isLoading,\n});\n\nexport default injectPhotosPartialState(mapStateToProps)(DesktopPagination);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Image } from 'antd';\nimport messages from 'utils/messages';\n\nconst ImageCard = (props) => {\n  const { title, url, thumbnailUrl } = props;\n  return (\n    <Card\n      bordered\n      hoverable\n      cover={\n        <Image\n          width={'100%'}\n          src={thumbnailUrl}\n          preview={{\n            src: url,\n            mask: messages.misc.viewFullSize,\n          }}\n        />\n      }\n    >\n      <Card.Meta title={title} />\n    </Card>\n  );\n};\n\nImageCard.propTypes = {\n  title: PropTypes.string,\n  url: PropTypes.string,\n  thumbnailUrl: PropTypes.string,\n};\n\nImageCard.defaultProps = {\n  title: '',\n  url: '',\n  thumbnailUrl: '',\n};\n\nexport default ImageCard;\n","import { Card } from 'antd';\nimport styled from 'styled-components';\n\nexport const SkeletonCard = styled(Card)`\n  height: 100%;\n  .ant-skeleton-element {\n    position: relative;\n    width: 100%;\n    padding-top: 100%;\n  }\n  .ant-skeleton-title {\n    margin: 6px 0 2px;\n  }\n  .ant-skeleton-image {\n    position: absolute;\n    width: auto;\n    height: auto;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: hsla(0,0%,74.5%,.3);\n  }\n`;\n","import { Card, Skeleton } from 'antd';\nimport React from 'react';\nimport { SkeletonCard } from './styles';\n\nconst ImageCardSkeleton = () => {\n  return (\n    <SkeletonCard\n      bordered\n      cover={<Skeleton.Image />}\n    >\n      <Card.Meta title={<Skeleton active paragraph={false} />} />\n    </SkeletonCard>\n  );\n};\n\nexport default ImageCardSkeleton;\n","import { Col, Row } from 'antd';\nimport ImageCard, { ImageCardSkeleton } from 'components/ImageCard';\nimport { injectPhotosPartialState } from 'context/photos';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst ImageList = (props) => {\n  const { items, isLoading } = props;\n  return (\n    <Row gutter={[12, 12]}>\n      {items.map((item) => (\n        <Col xs={24} sm={12} md={8} lg={6} key={item.id}>\n          <ImageCard {...item} />\n        </Col>\n      ))}\n      {isLoading &&\n        new Array(3).fill().map((val, i) => (\n          <Col xs={24} sm={12} md={8} lg={6} key={i}>\n            <ImageCardSkeleton />\n          </Col>\n        ))}\n    </Row>\n  );\n};\n\nImageList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n    })\n  ),\n  isLoading: PropTypes.bool,\n  incrementCurrentPage: PropTypes.func,\n};\n\nImageList.defaultProps = {\n  items: [],\n  isLoading: false,\n  incrementCurrentPage: () => {},\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.photos.items,\n  isLoading: state.photos.isLoading,\n  incrementCurrentPage: state.photosActions.incrementCurrentPage,\n});\n\nexport default injectPhotosPartialState(mapStateToProps)(ImageList);\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const LabelText = styled.span`\n  font-size: 0.875rem;\n  color: rgba(0, 0, 0, 0.75);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputSelect, InputText, InputSearch } from '.';\nimport { Label, LabelText } from './styles';\n\nconst InputFactory = (props) => {\n  const { type, label, ...rest } = props;\n\n  return (\n    <Label>\n      {label && <LabelText>{label}</LabelText>}\n      {type === 'text' && <InputText {...rest} />}\n      {type === 'select' && <InputSelect {...rest} />}\n      {type === 'search' && <InputSearch {...rest} />}\n    </Label>\n  );\n};\n\nInputFactory.propTypes = {\n  label: PropTypes.string,\n  type: PropTypes.oneOf(['text', 'select', 'search']),\n};\n\nInputFactory.defaultProps = {\n  label: '',\n  type: 'text',\n};\n\nexport default InputFactory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'antd';\n\nconst CommonSelect = (props) => {\n  const { options, ...rest } = props;\n  return (\n    <Select size=\"large\" {...rest}>\n      {options.map((option) => (\n        <Select.Option key={option.value} value={option.value}>\n          {option.optionLabel}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n};\n\nCommonSelect.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      optionLabel: PropTypes.node,\n    })\n  ),\n};\n\nCommonSelect.defaultProps = {\n  options: [],\n};\n\nexport default CommonSelect;\n","import React from 'react';\nimport { Input } from 'antd';\n\nconst InputText = (props) => {\n  return <Input size=\"large\" {...props}></Input>;\n};\n\nInputText.propTypes = {};\n\nInputText.defaultProps = {};\n\nexport default InputText;\n","import React from 'react';\nimport { Input } from 'antd';\n\nconst InputSearch = (props) => {\n  return <Input.Search size=\"large\" {...props}></Input.Search>;\n};\n\nInputSearch.propTypes = {};\n\nInputSearch.defaultProps = {};\n\nexport default InputSearch;\n","import styled from 'styled-components';\n\nexport const OperationsBarContainer = styled.div`\n  margin-bottom: 2rem;\n`;\n","import { Col, Row } from 'antd';\nimport Input from 'components/common/Input';\nimport { injectPhotosPartialState } from 'context/photos';\nimport React from 'react';\nimport { ITEMS_PER_PAGE_OPTIONS } from 'utils/constants';\nimport messages from 'utils/messages';\nimport PropTypes from 'prop-types';\nimport { OperationsBarContainer } from './styles';\n\nconst OperationsBar = (props) => {\n  const { albumId, itemsPerPage, albums, onSetSearch, onAlbumChange, onItemsPerPageChange } = props;\n\n  return (\n    <OperationsBarContainer>\n      <Row gutter={[12, 12]} justify=\"space-between\">\n        <Col xs={24} md={8}>\n          <Input\n            type={'search'}\n            placeholder={messages.placeholders.search}\n            label={messages.labels.search}\n            onSearch={onSetSearch}\n            allowClear\n          />\n        </Col>\n        <Col xs={24} md={8}>\n          <Input\n            type={'select'}\n            placeholder={messages.placeholders.folder}\n            label={messages.labels.folder}\n            value={albumId}\n            options={albums}\n            onChange={onAlbumChange}\n            showSearch\n          />\n        </Col>\n        <Col xs={24} md={6} lg={4}>\n          <Input\n            type={'select'}\n            label={messages.labels.itemsPerPage}\n            value={itemsPerPage}\n            options={ITEMS_PER_PAGE_OPTIONS}\n            onChange={onItemsPerPageChange}\n          />\n        </Col>\n      </Row>\n    </OperationsBarContainer>\n  );\n};\n\nOperationsBar.propTypes = {\n  albumId: PropTypes.number,\n  itemsPerPage: PropTypes.number,\n  albums: PropTypes.array,\n  onAlbumChange: PropTypes.func,\n  onItemsPerPageChange: PropTypes.func,\n  onSetSearch: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  albumId: state.query.albumId,\n  itemsPerPage: state.query.itemsPerPage,\n  albums: state.albums.items,\n  onAlbumChange: state.photosActions.setCurrentAlbum,\n  onItemsPerPageChange: state.photosActions.setItemsPerPage,\n  onSetSearch: state.photosActions.setSearch,\n});\n\nexport default injectPhotosPartialState(mapStateToProps)(OperationsBar);\n","import styled from 'styled-components';\nimport { Typography, Layout } from 'antd';\n\nexport const StyledTitle = styled(Typography.Title)`\n  &.ant-typography {\n    color: #fff;\n    font-size: 1.5rem;\n    margin-bottom: 0;\n  }\n`;\n\nexport const StyledHeader = styled(Layout.Header)`\n  display: flex;\n  align-items: center;\n  & > div {\n    width: 100%;\n  }\n`;\n\nexport const StyledContent = styled(Layout.Content)`\n  width: 100%;\n  padding: 2rem 15px;\n  margin-right: auto;\n  margin-left: auto;\n  @media (min-width: 576px) {\n    max-width: 540px;\n  }\n\n  @media (min-width: 768px) {\n    max-width: 720px;\n  }\n\n  @media (min-width: 992px) {\n    max-width: 960px;\n  }\n\n  @media (min-width: 1200px) {\n    max-width: 1140px;\n  }\n`;\n","import React from 'react';\n\nconst FilterIcon = (props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fas\"\n      data-icon=\"filter\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      {...props}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z\"\n      ></path>\n    </svg>\n  );\n};\n\nFilterIcon.defaultProps = {\n  height: 16,\n  width: 16,\n  color: 'currentColor',\n};\n\nexport default FilterIcon;\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button.attrs({\n  type: 'button',\n})`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.5rem;\n  color: #fff;\n  margin-left: auto;\n  cursor: pointer;\n  &:hover {\n    color: #40a9ff;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterIcon } from 'components/common/Icons';\nimport { StyledButton } from './styles';\n\nconst FilterButton = (props) => {\n  const { onClick } = props;\n  const onButtonClick = (e) => {\n    e.preventDefault();\n    onClick(e);\n  };\n  return (\n    <StyledButton onClick={onButtonClick}>\n      <FilterIcon />\n    </StyledButton>\n  );\n};\n\nFilterButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default FilterButton;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Layout, Drawer, Row, Col } from 'antd';\nimport useIsDesktop from 'hooks/useIsDesktop';\nimport messages from 'utils/messages';\nimport { StyledContent, StyledHeader, StyledTitle } from './styles';\nimport FilterButton from 'components/FilterButton';\n\nconst AppLayout = (props) => {\n  const { children, operationsBar } = props;\n  const isDesktop = useIsDesktop();\n\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\n  const toggleDrawer = () => {\n    setIsDrawerOpen(!isDrawerOpen);\n  };\n\n  const closeDrawer = () => {\n    setIsDrawerOpen(false);\n  };\n\n  return (\n    <Layout>\n      <StyledHeader>\n        <Row align=\"middle\">\n          <Col xs={22} md={24}>\n            <StyledTitle>{messages.headers.title}</StyledTitle>\n          </Col>\n          {!isDesktop && (\n            <Col xs={2}>\n              <FilterButton onClick={toggleDrawer} />\n            </Col>\n          )}\n        </Row>\n      </StyledHeader>\n\n      <Layout>\n        <StyledContent>\n          {operationsBar && isDesktop && operationsBar}\n          {operationsBar && !isDesktop && (\n            <Drawer\n              title={messages.headers.drawerTitle}\n              placement=\"right\"\n              onClose={closeDrawer}\n              visible={isDrawerOpen}\n            >\n              {operationsBar}\n            </Drawer>\n          )}\n          {children}\n        </StyledContent>\n      </Layout>\n    </Layout>\n  );\n};\n\nAppLayout.propTypes = {\n  children: PropTypes.node,\n  operationsBar: PropTypes.node,\n};\n\nexport default AppLayout;\n","import DesktopPagination from 'components/DesktopPagination';\nimport ImageList from 'components/ImageList/ImageList';\nimport OperationsBar from 'components/OperationsBar';\nimport useIsDesktop from 'hooks/useIsDesktop';\nimport AppLayout from 'layout/AppLayout/AppLayout';\nimport React from 'react';\n\nconst HomePage = () => {\n  const isDesktop = useIsDesktop();\n  return (\n    <AppLayout operationsBar={<OperationsBar />}>\n      <ImageList />\n      {isDesktop && <DesktopPagination />}\n    </AppLayout>\n  );\n};\n\nexport default HomePage;\n","import { QueryClient, QueryClientProvider } from 'react-query';\nimport HomePage from 'pages/HomePage';\nimport { withPhotosContext } from 'context/photos';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <HomePage />\n    </QueryClientProvider>\n  );\n}\n\nexport default withPhotosContext(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.min.css';\n// import 'antd/dist/antd.dark.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}